/*
	UIZE JAVASCRIPT FRAMEWORK 2012-01-10

	http://www.uize.com/reference/Uize.Test.Uize.Array.Dupes.html
	Available under MIT License or GNU General Public License -- http://www.uize.com/license.html
*/
Uize.module({name:'Uize.Test.Uize.Array.Dupes',builder:function(){var _a={},_b={},_c={},_d=[],_e=[],_f=[],_g=function(){},_h=function(){},_i=function(){};return Uize.Test.declare({title:'Uize.Array.Dupes Module Test',test:[Uize.Test.requiredModulesTest('Uize.Array.Dupes'),Uize.Test.staticMethodsTest([['Uize.Array.Dupes.dedupe',[['Test that multiple duplicate number values are removed, and that non-duplicate values are not removed',[[1,2,NaN,1,1,2,2,NaN,NaN,Infinity]],[1,2,NaN,Infinity]],['Test that multiple duplicate string values are removed, and that non-duplicate values are not removed',[['foo','bar','foo','foo','bar','bar','hello']],['foo','bar','hello']],['Test that multiple duplicate boolean values are removed, and that non-duplicate values are not removed',[[false,false,false,true]],[false,true]],['Test that multiple duplicate undefined values are removed',[[undefined,undefined,undefined]],[undefined]],['Test that multiple duplicate undefined values are removed',[[null,null,null]],[null]],{
title:'Test that multiple duplicate object values are removed, and that non-duplicate values are not removed',test:function(){return this.expect([_a,_b,_c],Uize.Array.Dupes.dedupe([_a,_b,_a,_a,_b,_b,_c]));}},{title:'Test that multiple duplicate array values are removed, and that non-duplicate values are not removed',test:function(){return this.expect([_d,_e,_f],Uize.Array.Dupes.dedupe([_d,_e,_d,_d,_e,_e,_f]));}},{title:'Test that multiple duplicate function values are removed, and that non-duplicate values are not removed',test:function(){return this.expect([_g,_h,_i],Uize.Array.Dupes.dedupe([_g,_h,_g,_g,_h,_h,_i]));}},{title:'Test that all value types can be present in the source array and duplicates of each type are removed correctly',test:function(){return this.expect([undefined,null,NaN,1,true,'foo',_a,_d,_g],Uize.Array.Dupes.dedupe([undefined,undefined,undefined,null,null,null,NaN,NaN,NaN,1,1,1,true,true,true,'foo','foo','foo',_a,_a,_a,_d,_d,_d,_g,_g,_g]));}},
['Test that string serializations of number values are not considered duplicates of those number values',[[1,'1',-1,'-1',NaN,'NaN',Infinity,'Infinity']],[1,'1',-1,'-1',NaN,'NaN',Infinity,'Infinity']],['Test that string serializations of boolean values are not considered duplicates of those boolean values',[[false,'false',true,'true']],[false,'false',true,'true']],['Test that strings serializations of the values null and undefined are not considered duplicates of those values',[[null,'null',undefined,'undefined']],[null,'null',undefined,'undefined']],['Test that the optional canonicalizer parameter is observed correctly',[['hello','world','Hello','HELLO','World','WORLD','foo'],function(_j){return _j.toLowerCase()}],['hello','world','foo']]],null,{cloneArguments:true}]])]});}});